"id","estRows","task","access object","operator info"
"Projection_19","1.03","root","","gharchive_dev.collection_items.repo_name, Column#46"
"└─Sort_20","1.03","root","","Column#46:desc"
"  └─HashAgg_22","1.03","root","","group by:gharchive_dev.collection_items.repo_name, funcs:count(distinct gharchive_dev.github_events.actor_login)->Column#46, funcs:firstrow(gharchive_dev.collection_items.repo_name)->gharchive_dev.collection_items.repo_name"
"    └─HashJoin_33","19.29","root","","anti semi join, equal:[eq(gharchive_dev.github_events.actor_login, gharchive_dev.blacklist_users.login)]"
"      ├─IndexReader_102(Build)","6.00","root","","index:IndexFullScan_101"
"      │ └─IndexFullScan_101","6.00","cop[tikv]","table:blacklist_users, index:blacklist_users_login_uindex(login)","keep order:false, stats:pseudo"
"      └─Projection_35(Probe)","24.11","root","","gharchive_dev.github_events.actor_login, gharchive_dev.collection_items.repo_name"
"        └─HashJoin_37","24.11","root","","CARTESIAN inner join"
"          ├─Point_Get_38(Build)","1.00","root","table:collections","handle:10005"
"          └─IndexHashJoin_46(Probe)","24.11","root","","inner join, inner:IndexReader_43, outer key:gharchive_dev.collection_items.repo_id, inner key:gharchive_dev.github_events.repo_id, equal cond:eq(gharchive_dev.collection_items.repo_id, gharchive_dev.github_events.repo_id)"
"            ├─TableReader_75(Build)","1.44","root","","data:Selection_74"
"            │ └─Selection_74","1.44","cop[tikv]","","eq(gharchive_dev.collection_items.collection_id, 10005)"
"            │   └─TableFullScan_73","79.00","cop[tikv]","table:ci","keep order:false"
"            └─IndexReader_43(Probe)","24.11","root","partition:issues_event","index:Selection_42"
"              └─Selection_42","24.11","cop[tikv]","","not(like(gharchive_dev.github_events.actor_login, ""%bot%"", 92))"
"                └─IndexRangeScan_41","24.11","cop[tikv]","table:ge, index:index_ge_on_repo_id_type_action_created_at(repo_id, type, action, created_at, pr_merged, actor_login, number, push_distinct_size, push_size, additions, deletions)","range: decided by [eq(gharchive_dev.github_events.repo_id, gharchive_dev.collection_items.repo_id) eq(gharchive_dev.github_events.type, IssuesEvent) eq(gharchive_dev.github_events.action, opened)], keep order:false"
